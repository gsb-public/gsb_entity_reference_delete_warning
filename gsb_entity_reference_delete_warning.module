<?php

/**
 * Implements hook_form_alter().
 */
function gsb_entity_reference_delete_warning_form_alter(&$form, &$form_state, $form_id) {
  global $base_url;
  if ($form_id == 'node_delete_confirm') {
    $nid = $form['nid']['#value'];
    //$nid = '382271';
    //$nid = '384816';
    //$nid = '312206';
    $nids = gsb_entity_reference_delete_warning_get_entity_references_to_node($nid);
    $nodes = node_load_multiple($nids);
    $warning_lines = array();
    $options = array();
    $options['attributes']['target'] = '_blank';
    foreach($nodes as $node) {
      $warning_lines[] = '<br/>';
      $warning_lines[] = l('('. $node->type . ') ' . $node->title, $base_url . '/node/' . $node->nid, $options);
    }
    if (!empty($warning_lines)) {
      $warning_message = t("Warning: The following content references this node:");
      $form['warnings'] = array(
        '#markup' => '<br/><br/>' . $warning_message . implode($warning_lines),
      );
    }
  }
}

function gsb_entity_reference_delete_warning_get_entity_references_to_node($nid) {
  $nids = array();

  // get the field map info
  $field_map = field_info_field_map();

  // get the list of entityreference fields
  $reference_fields = array_filter($field_map, function($reference_fields) {
    return $reference_fields['type'] == 'entityreference' ? TRUE : FALSE;
  });

  // get the list of fpp fields with entityreferences
  $fpp_fields = array_filter($reference_fields, function($reference_fields) {
    return !empty($reference_fields['bundles']['fieldable_panels_pane']) ? TRUE : FALSE;
  });

  // get the list of field_collection fields with entityreferences
  $fc_fields = array_filter($reference_fields, function($reference_fields) {
    return !empty($reference_fields['bundles']['field_collection_item']) ? TRUE : FALSE;
  });

  // get the list of node fields with entityreferences
  $node_fields = array_filter($reference_fields, function($reference_fields) {
    return !empty($reference_fields['bundles']['node']) ? TRUE : FALSE;
  });

  $found_nids = array();
  foreach($node_fields as $field_name => $field_info) {
    $type = 'node';
    $found_nids = array_merge(gsb_entity_reference_delete_warning_get_field_references_to_node($field_name, $type, $nid), $found_nids);
  }
  $nids = array_merge($nids, $found_nids);

  $found_nids = array();
  foreach($fc_fields as $field_name => $field_info) {
    $type = 'fc';
    $found_nids = array_merge(gsb_entity_reference_delete_warning_get_field_references_to_node($field_name, $type, $nid), $found_nids);
  }
  $nids = array_merge($nids, $found_nids);

  $found_nids = array();
  foreach($fpp_fields as $field_name => $field_info) {
    $type = 'fpp';
    $found_nids = array_merge(gsb_entity_reference_delete_warning_get_field_references_to_node($field_name, $type, $nid), $found_nids);
  }
  $nids = array_merge($nids, $found_nids);

  $nids = array_unique($nids, SORT_REGULAR);

  return $nids;
}

function gsb_entity_reference_delete_warning_get_field_references_to_node($field_name, $type, $nid) {
  $nodes = array();
  if ($type == 'node') {
    $records = gsb_entity_reference_delete_warning_get_target_info($field_name, $nid);
    foreach ($records as $record) {
      $nodes[] = $record->entity_id;
    }
  }
  else if ($type == 'fc') {
    $records = gsb_entity_reference_delete_warning_get_target_info($field_name, $nid);
    foreach ($records as $record) {
      $entity_id = $record->entity_id;
      $value_field_name = $record->bundle;
      $value_records = gsb_entity_reference_delete_warning_get_value_info($entity_id, $value_field_name);
      foreach ($value_records as $value_record) {
        if ($value_record->entity_type == 'fieldable_panels_pane') {
          $fpp_nodes = gsb_entity_reference_delete_warning_get_nodes_by_fpid($value_record->entity_id);
          $nodes = array_merge($fpp_nodes, $nodes);
        }
        else if ($value_record->entity_type == 'node') {
          $nodes[] = $value_record->entity_id;
        }
      }
    }
  }
  else if ($type == 'fpp') {
    $records = gsb_entity_reference_delete_warning_get_target_info($field_name, $nid);
    foreach ($records as $record) {
      $fpid = $record->entity_id;
      $fpp_nodes = gsb_entity_reference_delete_warning_get_nodes_by_fpid($fpid);
      $nodes = array_merge($fpp_nodes, $nodes);
    }
  }
  return $nodes;
}

function gsb_entity_reference_delete_warning_get_nodes_by_fpid($fpid) {
  $nodes = array();
  $fpp_records = gsb_entity_reference_delete_warning_get_subtype_info($fpid);
  foreach ($fpp_records as $fpp_record) {
    $uuid = $fpp_record->uuid;
    $pane_records = gsb_entity_reference_delete_warning_get_pane_info($uuid);
    foreach ($pane_records as $pane_record) {
      $did = $pane_record->did;
      $entity_records = gsb_entity_reference_delete_warning_get_panelizer_entity_info($did);
      foreach ($entity_records as $entity_record) {
        $nodes[] = $entity_record->entity_id;
      }
    }
  }
  return $nodes;
}

function gsb_entity_reference_delete_warning_get_target_info($field_name, $target_id) {
  $target_field_name = $field_name . '_target_id';
  $table_name = 'field_data_' . $field_name;
  $result = db_select($table_name, 'fd')
    ->fields('fd', array('entity_type', 'bundle', 'entity_id', $target_field_name))
    ->condition('fd.'.$target_field_name, $target_id, '=')
    ->execute();
  $records = array();
  foreach ($result as $record) {
    $records[] = $record;
  }
  return $records;
}

function gsb_entity_reference_delete_warning_get_value_info($entity_id, $field_name) {
  $value_field_name = $field_name . '_value';
  $value_table_name = 'field_data_' . $field_name;
  $result = db_select($value_table_name, 'fd')
    ->fields('fd', array('entity_type', 'bundle', 'entity_id', $value_field_name))
    ->condition('fd.'.$value_field_name, $entity_id, '=')
    ->execute();
  $records = array();
  foreach ($result as $record) {
    $records[] = $record;
  }
  return $records;
}

function gsb_entity_reference_delete_warning_get_subtype_info($fpid) {
  $result = db_select('fieldable_panels_panes', 'fpp')
    ->fields('fpp', array('fpid', 'bundle', 'uuid'))
    ->condition('fpp.fpid', $fpid, '=')
    ->execute();
  $records = array();
  foreach ($result as $record) {
    $records[] = $record;
  }
  return $records;
}

function gsb_entity_reference_delete_warning_get_pane_info($uuid) {
  $subtype = 'uuid:' . $uuid;
  $result = db_select('panels_pane', 'pp')
    ->fields('pp', array('pid', 'did', 'subtype'))
    ->condition('pp.subtype', $subtype, '=')
    ->execute();
  $records = array();
  foreach ($result as $record) {
    $records[] = $record;
  }
  return $records;
}

function gsb_entity_reference_delete_warning_get_panelizer_entity_info($did) {
  $result = db_select('panelizer_entity', 'pe')
    ->fields('pe', array('entity_type', 'entity_id', 'did'))
    ->condition('pe.did', $did, '=')
    ->execute();
  $records = array();
  foreach ($result as $record) {
    $records[] = $record;
  }
  return $records;
}
